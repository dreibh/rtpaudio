// ##########################################################################
// ####                                                                  ####
// ####                      RTP Audio Server Project                    ####
// ####                    ============================                  ####
// ####                                                                  ####
// #### Audio Quality Interface Inlines                                  ####
// ####                                                                  ####
// ####           Copyright (C) 1999-2014 by Thomas Dreibholz            ####
// ####                                                                  ####
// #### Contact:                                                         ####
// ####    EMail: dreibh@iem.uni-due.de                                  ####
// ####    WWW:   http://www.iem.uni-due.de/~dreibh/rtpaudio             ####
// ####                                                                  ####
// #### ---------------------------------------------------------------- ####
// ####                                                                  ####
// #### This program is free software: you can redistribute it and/or    ####
// #### modify it under the terms of the GNU General Public License as   ####
// #### published by the Free Software Foundation, either version 3 of   ####
// #### the License, or (at your option) any later version.              ####
// ####                                                                  ####
// #### This program is distributed in the hope that it will be useful,  ####
// #### but WITHOUT ANY WARRANTY; without even the implied warranty of   ####
// #### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    ####
// #### GNU General Public License for more details.                     ####
// ####                                                                  ####
// #### You should have received a copy of the GNU General Public        ####
// #### License along with this program.  If not, see                    ####
// #### <http://www.gnu.org/licenses/>.                                  ####
// ####                                                                  ####
// ##########################################################################
// $Id$


#ifndef AUDIOQUALITYINTERFACE_ICC
#define AUDIOQUALITYINTERFACE_ICC


#include "audioqualityinterface.h"


// ###### "=="-operator #####################################################
inline int AudioQualityInterface::operator==(const AudioQualityInterface& quality) const
{
   return((getSamplingRate() == quality.getSamplingRate()) &&
          (getChannels()     == quality.getChannels())     &&
          (getBits()         == quality.getBits())         &&
          (getByteOrder()    == quality.getByteOrder()));
}


// ###### "!="-operator #####################################################
inline int AudioQualityInterface::operator!=(const AudioQualityInterface& quality) const
{
   return((getSamplingRate() != quality.getSamplingRate()) ||
          (getChannels()     != quality.getChannels())     ||
          (getBits()         != quality.getBits())         ||
          (getByteOrder()    != quality.getByteOrder()));
}


// ###### ">="-operator #####################################################
inline int AudioQualityInterface::operator>=(const AudioQualityInterface& quality) const
{
   return((getSamplingRate() >= quality.getSamplingRate()) &&
          (getChannels()     >= quality.getChannels())     &&
          (getBits()         >= quality.getBits()));
}


// ###### ">"-operator ######################################################
inline int AudioQualityInterface::operator>(const AudioQualityInterface& quality) const
{
   return((getSamplingRate() > quality.getSamplingRate()) &&
          (getChannels()     > quality.getChannels())     &&
          (getBits()         > quality.getBits()));
}


// ###### "<="-operator #####################################################
inline int AudioQualityInterface::operator<=(const AudioQualityInterface& quality) const
{
   return((getSamplingRate() <= quality.getSamplingRate()) &&
          (getChannels()     <= quality.getChannels())     &&
          (getBits()         <= quality.getBits()));
}


// ###### "<"-operator ######################################################
inline int AudioQualityInterface::operator<(const AudioQualityInterface& quality) const
{
   return((getSamplingRate() < quality.getSamplingRate()) &&
          (getChannels()     < quality.getChannels())     &&
          (getBits()         < quality.getBits()));
}


// ###### Set quality from AudioQualityInterface ############################
inline void AdjustableAudioQualityInterface::setQuality(const AudioQualityInterface& quality)
{
   setSamplingRate(quality.getSamplingRate());
   setBits(quality.getBits());
   setChannels(quality.getChannels());
   setByteOrder(quality.getByteOrder());
}


#endif
